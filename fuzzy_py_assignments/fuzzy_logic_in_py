import numpy as np
import skfuzzy as fuzz

# Accept user input
user_input = input("Enter a number between 0 and 20: ")
input_value = int(user_input)

# Input variables
x = np.arange(0, 21, 1) # Input range from 0 to 20

# Define fuzzy sets for the input variable
low = fuzz.trimf(x, [0, 0, 5]) # Triangular fuzzy set for low values
medium = fuzz.trimf(x, [2, 5, 8]) #Triangular fuzzy set for medium values
high = fuzz.trimf(x, [5, 10, 10]) # Triangular fuzzy set for high values
special_case = fuzz.trimf(x, [0, 0, 20]) # Triangular fuzzy set for special case

# Get membership values for input_value
low_degree = fuzz.interp_membership(x, low, input_value)
medium_degree = fuzz.interp_membership(x, medium, input_value)
high_degree = fuzz.interp_membership(x, high, input_value)
special_case_degree = fuzz.interp_membership(x, special_case, input_value)

# Define fuzzy rules
rule1 = np.fmax(low, medium) # Rule: If input is low or medium, then output is high
rule2 = np.fmin(medium, high) # Rule: If input is medium and high, then output is low

# Apply fuzzy rules to determine the fuzzy relation beween input and output
relation = np.fmax(rule1, rule2)

# Aggregate the fuzzy relation using the maximum operator
aggregated = np.fmax(low, relation)
activated = np.fmin(aggregated, medium)

# Defuzzify the relation to obtain a crisp output
output = fuzz.defuzz(x, relation, 'centroid')

# Display the crisp output 
print("Output:", output)